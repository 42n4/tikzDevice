\name{tikzDevice-package}
\Rdversion{1.1}
\alias{tikzDevice-package}
\alias{tikzDevice}
\docType{package}

\title{
Support for native LaTeX output of R graphics
}

\details{

  \tabular{ll}{
    Package: \tab tikzDevice\cr
    Type: \tab Package\cr
    Version: \tab 0.35\cr
    Date: \tab 2009-07-16\cr
    License: \tab GPL 2.0 or greater\cr
    LazyLoad: \tab yes\cr
  }
}

\description{
  The tikzDevice package implements the \code{\link{tikz}} ouput device which
  generates R graphics in a LaTeX friendly format. LaTeX handles the
  typesetting of all text in graphics generated by \code{tikz}. This allows for
  seamless integration between these graphics and documents that are also being
  typeset by LaTeX. Using LaTeX to generate graph text also means that
  \strong{LaTeX mathematics can be typeset directly into labels and
  annotations}
}

\section{Unicode}{
  Using tikzDevice functions on strings containing Unicode (multibyte)
  characters requires special consideration. The primary reason for this is
  that \code{pdftex}, the typesetting engine most commonly used to compile
  LaTeX documents, has no native support for Unicode. Recently, two new engines
  have become widely available that do support Unicode natively. These engines
  are:

  \itemize{

    \item The \code{xetex} engine which has been a part of standard TeX
    distributions since TeX Live 2007 and MiKTeX 2.7.

    \item The \code{luatex} engine which is a direct sucessor to \code{pdftex}.
    LuaTeX is still considered `beta' software (as of spring 2011) but has been
    included in standard TeX distributions since TeX Live 2008 and MiKTeX 2.9.

  }

  As of Version 0.6.0, the tikzDevice package includes support for the
  \code{xetex} engine provided a recent version of TeX Live or MiKTeX is
  available.

  The tikzDevice defaults to using the \code{pdftex} engine, but this may be
  changed by setting an option: \code{option(tikzDefaultEngine = 'xetex')}.
  When working with text that contains Unicode characters, we strongly
  reccomend switching to the \code{xetex} engine and the package will produce
  warning messages when multibyte characters are sent to the \code{pdftex}
  engine. Users who find these warnings annoying may disable them by setting
  \code{options(tikzPdftexWarnUTF = FALSE)} as it is possible to send Unicode
  information to the \code{pdftex} engine with the following caveats:

  \itemize{

    \item The task of determining the proper mix of LaTeX packages required to
    supply glyphs for Unicode characters is left entirely up to the user.
    \code{options(tikzLatexPackages)} may need to be customized in order to get
    proper behavior.

    \item The \code{\link{getLatexCharMetrics}} function will always return 0
    for ascent, descent and width when passed a character code outside the
    range 32--127 when using the \code{pdftex} engine.
  }

  When using the \code{xetex} engine, Unicode support is enabled by loading the
  LaTeX packages \code{fontspec} and \code{xunicode}. Using this setup, support
  for Unicode characters should be limited only by the fonts used in the
  document. The font selection may be adjusted using
  \code{options(tikzXelatexPackages)}.

}

\author{
  Cameron Bracken: \email{cameron.bracken@gmail.com}

  Charlie Sharpsteen: \email{source@sharpsteen.net}

  Submit bug reports to: \email{tikzdevice-bugs@lists.r-forge.r-project.org}
}


\references{
The TikZ and PGF Packages: Manual for version 2.00\cr
\url{http://sourceforge.net/projects/pgf}\cr
Till Tanatu, February 20, 2008
}

\keyword{ package }
\seealso{
\code{\link{tikz}}
}

\examples{
  \dontrun{
    td <- tempdir()
    tf <- file.path(td,'example.tex')
    oldwd <- getwd()
    setwd(td)

    tikz(tf,standAlone=T)
      plot(-2:2, -2:2, type = "n", axes=F,
          xlab='', ylab='', main='TikZ Device Example')
        text(x,y,paste('\\\\Large$\\\\',syms,'$',sep=''))
    dev.off()
    tools::texi2dvi(tf,pdf=T)
    system(paste(getOption('pdfviewer'),file.path(td,'example.pdf')))
    setwd(oldwd)
  }
}
